generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  admin Boolean
}

model Match {
  id         Int      @id @default(autoincrement())
  date       DateTime
  team       Team[]
  locationId Int
  location   Location @relation(fields: [locationId], references: [id])
}

model Team {
  id         Int          @id @default(autoincrement())
  score      Int          @db.SmallInt
  matchId    Int
  match      Match        @relation(fields: [matchId], references: [id])
  teamPlayer TeamPlayer[]
}

model Player {
  id              Int               @id @default(autoincrement())
  name            String
  mu              Float
  sigma           Float
  regular         Boolean
  teamPlayer      TeamPlayer[]
  playerStatistic PlayerStatistic[]
}

model TeamPlayer {
  id          Int    @id @default(autoincrement())
  beforeMu    Float
  beforeSigma Float
  afterMu     Float
  afterSigma  Float
  teamId      Int
  team        Team   @relation(fields: [teamId], references: [id])
  playerId    Int
  player      Player @relation(fields: [playerId], references: [id])
  weight      Float? @db.Real
}

model Location {
  id    Int     @id @default(autoincrement())
  name  String
  match Match[]
}

model GlobalStatistic {
  id                  Int     @id @default(autoincrement())
  index               Int     @db.SmallInt
  name                String
  value               String
  details             String?
  extraDetails        String?
  extraDetailsTooltip String?
}

model PlayerStatistic {
  id                  Int     @id @default(autoincrement())
  index               Int     @db.SmallInt
  playerId            Int
  player              Player  @relation(fields: [playerId], references: [id])
  name                String
  value               String
  details             String?
  extraDetails        String?
  extraDetailsTooltip String?
}
